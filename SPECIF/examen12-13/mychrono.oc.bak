oc5:
module: mychrono

signals: 8
   0: input:on - single:1 bool:0
   1: input:h - single:2 bool:0
   2: input:m - single:3 bool:0
   3: input:s - single:4 bool:0
   4: output:active - single:5
   5: output:c_h - single:7
   6: output:c_m - single:9
   7: output:c_s - single:11
end: 

variables: 12
   0: $0
   1: $0
   2: $1
   3: $1
   4: $1
   5: $0
   6: $1
   7: $1
   8: $1
   9: $1
   10: $1
   11: $1
end: 

actions: 26
   0: present: 0
   1: present: 1
   2: present: 2
   3: present: 3
   4: output: 4
   5: output: 5
   6: output: 6
   7: output: 7
   8: call:$0 (5) (@$0)
   9: call:$1 (6) (#0)
   10: call:$1 (7) (#0)
   11: call:$1 (8) (#0)
   12: call:$1 (9) (#0)
   13: call:$1 (10) (#0)
   14: call:$1 (11) (#0)
   15: if: 1
   16: call:$0 (5) (@$1)
   17: call:$1 (6) ($8(5,2,$8(5,6,#0)))
   18: call:$1 (7) ($8(5,$14(2,6),#0))
   19: call:$1 (8) ($8(5,3,$8(5,8,#0)))
   20: call:$1 (9) ($8(5,$14(3,8),#0))
   21: call:$1 (10) ($8(5,4,$8(5,10,#0)))
   22: call:$1 (11) ($8(5,$14(4,10),#0))
   23: call:$1 (6) ($8(5,6,#0))
   24: call:$1 (8) ($8(5,8,#0))
   25: call:$1 (10) ($8(5,10,#0))
end:

states: 3
startpoint: 0
calls: 62
0:  8 4 9 10 5 11 12 6 13 14 7 <1> 

1:  15 ( 16 4 17 18 5 19 20 6 21 22 7 <2> )( 8 4 17 18 5 19 20 6 21 22 7 <1> )

2:  15 ( 8 4 23 18 5 24 20 6 25 22 7 <1> )( 16 4 23 18 5 24 20 6 25 22 7 <2> )

end:

endmodule: